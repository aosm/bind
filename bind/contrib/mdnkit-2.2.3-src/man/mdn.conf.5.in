.\" $Id: mdn.conf.5.in,v 1.1.1.1 2002/11/18 22:25:25 bbraun Exp $"
.\"
.\" Copyright (c) 2000,2001 Japan Network Information Center.
.\" All rights reserved.
.\"  
.\" By using this file, you agree to the terms and conditions set forth bellow.
.\" 
.\" 			LICENSE TERMS AND CONDITIONS 
.\" 
.\" The following License Terms and Conditions apply, unless a different
.\" license is obtained from Japan Network Information Center ("JPNIC"),
.\" a Japanese association, Kokusai-Kougyou-Kanda Bldg 6F, 2-3-4 Uchi-Kanda,
.\" Chiyoda-ku, Tokyo 101-0047, Japan.
.\" 
.\" 1. Use, Modification and Redistribution (including distribution of any
.\"    modified or derived work) in source and/or binary forms is permitted
.\"    under this License Terms and Conditions.
.\" 
.\" 2. Redistribution of source code must retain the copyright notices as they
.\"    appear in each source code file, this License Terms and Conditions.
.\" 
.\" 3. Redistribution in binary form must reproduce the Copyright Notice,
.\"    this License Terms and Conditions, in the documentation and/or other
.\"    materials provided with the distribution.  For the purposes of binary
.\"    distribution the "Copyright Notice" refers to the following language:
.\"    "Copyright (c) Japan Network Information Center.  All rights reserved."
.\" 
.\" 4. Neither the name of JPNIC may be used to endorse or promote products
.\"    derived from this Software without specific prior written approval of
.\"    JPNIC.
.\" 
.\" 5. Disclaimer/Limitation of Liability: THIS SOFTWARE IS PROVIDED BY JPNIC
.\"    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\"    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
.\"    PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL JPNIC BE LIABLE
.\"    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\"    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\"    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\"    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\"    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\"    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\"    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
.\" 
.\" 6. Indemnification by Licensee
.\"    Any person or entities using and/or redistributing this Software under
.\"    this License Terms and Conditions shall defend indemnify and hold
.\"    harmless JPNIC from and against any and all judgements damages,
.\"    expenses, settlement liabilities, cost and other liabilities of any
.\"    kind as a result of use and redistribution of this Software or any
.\"    claim, suite, action, litigation or proceeding by any third party
.\"    arising out of or relates to this License Terms and Conditions.
.\" 
.\" 7. Governing Law, Jurisdiction and Venue
.\"    This License Terms and Conditions shall be governed by and and
.\"    construed in accordance with the law of Japan. Any person or entities
.\"    using and/or redistributing this Software under this License Terms and
.\"    Conditions hereby agrees and consent to the personal and exclusive
.\"    jurisdiction and venue of Tokyo District Court of Japan.
.\"
.TH mdn.conf 5 "Mar 1, 2001"
.\"
.SH NAME
mdn.conf \- configuration file for internationalized domain name handling
.\"
.SH SYNOPSIS
@sysconfdir@/mdn.conf
.\"
.SH DESCRIPTION
.B mdn.conf
is a configuration file for mDNkit,
which is a toolkit for handling internationalized/multilingualized
domain names.
.PP
To use internationalized domain names in DNS or other protocols, they
must be converted to an appropriate format before further processing.
In mDNkit, this conversion process is comprised of the following tasks.
.IP 1. 3
Convert the given domain name in application's local codeset to Unicode,
and vice versa.
.IP 2. 3
Map certain characters in the name to period character so that they are
treated as the domain name
delimiter (\fIdelimiter mapping\fR).
.IP 3. 3
Map certain characters in the name to other characters or chracter sequences,
according to a mapping rule determined by its top level domain (TLD).
.IP 4. 3
Perform NAMEPREP, which is a starndard name preparation process for
internationalized domain names.  This process is composed of
the tree steps called mapping, normalization and prohibited character
checking.
.IP 5. 3
Convert the nameprepped name to IDN encoding, which is the standard encoding
for internationalized domain names (also known as ASCII-compatible encoding,
ACE), and vice versa.
.PP
.B mdn.conf
specifies the parameters for these tasks, such as:
.RS 2
.IP \- 2
the encoding of internationalized domain names (IDN encoding).
.IP \- 2
NAMEPREP schemes.
.RE
.\"
.SH SYNTAX
.B mdn.conf
is a simple text file, and each line in the file
(other than comment lines, which begin with ``#'', and empty lines)
forms an entry of the following format:
.PP
.RS 4
.nf
\fIkeyword\fP\ \fIvalue..\fP
.fi
.RE
\."
.SH "IDN-ENCODING ENTRY"
IDN encoding entry specifies the encoding name (codeset name) which
is used as the encoding of multilingualized domain names by resolvers and DNS
servers.
.PP
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWidn-encoding \fP\fIencoding\fP
.fi
.RE
.PP
\fIencoding\fP is the encoding name to be used, and any of the following
names can be specified.
.RS 2
.IP "\(bu" 2
``AMC-ACE-Z''
.IP "\(bu" 2
``RACE''
.IP "\(bu" 2
``DUDE''
.IP "\(bu" 2
``UTF-8''
.IP "\(bu" 2
Codeset names which iconv_open() library function accepts.  Please
consult iconv() documentation for the available codesets.
.IP "\(bu" 2
Any alias names for the above, defined by the alias file.
(See section ``ENCODING-ALIAS-FILE ENTRY'')
.RE
.PP
The standard encoding is being discussed by IETF IDN working group.
.\"
.SH "NAMEPREP ENTRY"
Nameprep entry specifies the version of NAMEPREP, which is a specification
of ``canonicalization'' process of multilingual domain name before
it is converted to the IDN encoding.
It is also being discussed by IETF IDN working group.
.PP
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWnameprep \fP\fIversion\fP
.fi
.RE
.PP
.I version
is the version name of NAMEPREP specification, and currently
the following 
.IR version s
can be specified.
.RS 2
.IP "\(bu" 2
``nameprep-03''
.br
This version refers to Internet Draft ``draft-ietf-idn-nameprep-03.txt''.
.IP "\(bu" 2
``nameprep-05''
.br
This version refers to Internet Draft ``draft-ietf-idn-nameprep-05.txt''.
.IP "\(bu" 2
``nameprep-06''
.br
This version refers to Internet Draft ``draft-ietf-idn-nameprep-06.txt''.
.RE
.PP
The NAMEPREP process consists of the following 3 subprocesses.
.IP 1. 3
mapping, which maps certain characters in a name to other characters,
possibly none.
.IP 2. 3
normalization, which replaces character variants in a name to
a unique one.
.IP 3. 3
prohibited/unassigned character checking, which detects invalid
characters in a name.
.PP
This entry is a shorthand for specifying all of them at once.
Actually,
.PP
.RS 4
\f(CWnameprep \fP\fIversion\fP
.RE
.PP
has the same effect of specifying following 4 entries.
.PP
.RS 4
.nf
\f(CWnameprep-map \fP\fIversion\fP
\f(CWnameprep-normalize \fP\fIversion\fP
\f(CWnameprep-prohibit \fP\fIversion\fP
\f(CWnameprep-unassigned \fP\fIversion\fP
.fi
.RE
.PP
If both this entry and more-specific entries above are specified,
more-specific ones take precedence.
.\"
.SH "NAMEPREP-MAP ENTRY"
Mapping entry specifies the mapping scheme of NAMEPREP process.
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWnameprep-map \fP\fIscheme\fP [\fIscheme\fP..]
.fi
.RE
.PP
.I scheme
specifies the mapping scheme, and currently available schemes are:
.RS 2
.TP 4
\f(CWnameprep-03\fP
Specify mapping defined by NAMEPREP-03 draft.
.TP 4
\f(CWnameprep-05\fP
Specify mapping defined by NAMEPREP-05 draft.
.TP 4
\f(CWnameprep-06\fP
Specify mapping defined by NAMEPREP-06 draft.
.TP 4
\f(CWfilemap:\fP\fIpathname\fP
Specify mapping defined by the file \fIpathname\fP.
See ``MAPFILE FORMAT'' for the format of this file.
.RE
.PP
More than one \fIscheme\fP can be specified.
If multiple schemes are specified, they are applied in turn.
.\"
.SH "NAMEPREP-NORMALIZE ENTRY"
Normalization entry specifies the normalization schemes which should be
applied to the domain names before sending them to name servers.
.\"
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWnameprep-normalize \fP\fIscheme\fP [\fIscheme\fP..]
.fi
.RE
.PP
.I scheme
is the normalization scheme, and following shows the currently available
schemes:
.RS 2
.TP 4
\f(CWnameprep-03\fP
Synonim for \f(CWunicode-form-kc/3.0.1\fR.
.TP 4
\f(CWnameprep-05\fP
Synonim for \f(CWunicode-form-kc/3.1.0\fR.
.TP 4
\f(CWnameprep-06\fP
Synonim for \f(CWunicode-form-kc/3.1.0\fR.
.TP 4
\f(CWunicode-form-kc\fP
Perform Unicode normalization called ``Unicode Normalization Form KC'',
defined by the latest standard.
.TP 4
\f(CWunicode-form-kc/3.0.1\fP
Perform Unicode Normalization Form KC defined by Unicode 3.0.1.
.TP 4
\f(CWunicode-form-kc/3.1.0\fP
Perform Unicode Normalization Form KC defined by Unicode 3.1.0.
.RE
.PP
More than one
.IR scheme s
can be specified.
If multiple schemes are specified, they are applied in turn.
.\"
.SH "NAMEPREP-PROHIBIT ENTRY"
Prohibit entry specifies the prohibited characters in the NAMEPREP
process. The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWnameprep-prohibit \fP\fIset\fP [\fIset\fP..]
.fi
.RE
.PP
.I set
specifies the set of prohibited characters.  Currently following sets
can be specified.
.RS 2
.TP 4
\f(CWnameprep-03\fP
Specify set of prohibited characters defined by NAMEPREP-03 draft.
.TP 4
\f(CWnameprep-05\fP
Specify set of prohibited characters defined by NAMEPREP-05 draft.
.TP 4
\f(CWnameprep-06\fP
Specify set of prohibited characters defined by NAMEPREP-06 draft.
.TP 4
\f(CWfileset:\fP\fIpathname\fP
Specify set of prohibited characters defined by the file \fIpathname\fP.
See ``SETFILE FORMAT '' for the format of this file.
.RE
.PP
When more than one 
.IR set s
are specified, a character is considered prohibited if it belongs to
any of those sets.
.\"
.SH "NAMEPREP-UNASSIGNED ENTRY"
Unassigned entry specifies the unassigned codepoints in the NAMEPREP
process. The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWnameprep-unassigned \fP\fIset\fP [\fIset\fP..]
.fi
.RE
.PP
.I set
specifies the set of unassigned characters.  Currently following sets
can be specified.
.RS 2
.TP 4
\f(CWnameprep-03\fP
Specify set of unassigned characters defined by NAMEPREP-03 draft.
.TP 4
\f(CWnameprep-05\fP
Specify set of unassigned characters defined by NAMEPREP-05 draft.
.TP 4
\f(CWnameprep-06\fP
Specify set of unassigned characters defined by NAMEPREP-06 draft.
.TP 4
\f(CWfileset:\fP\fIpathname\fP
Specify set of unassigned characters defined by the file \fIpathname\fP.
See ``SETFILE FORMAT '' for the format of this file.
.RE
.PP
When more than one 
.IR set s
are specified, a character is considered unassigned if it belongs to
any one of those sets.
.\"
.SH "ENCODING-ALIAS-FILE ENTRY"
Encoding alias entry specifies the file containing codeset name aliases.
The aliases can be used just as the real names.
.PP
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWencoding-alias-file \fP\fIpathname\fP
.fi
.RE
.PP
.I pathname
specifies the path name of the alias file.
The alias file is a simple text file, consisting of lines of the form:
.PP
.RS 4
.nf
\fIalias-name\fP\ \fIname\fP
.fi
.RE
.PP
.I alias-name
is the alias name to be defined, and
.I name
is the real name or another alias name.
.\"
.SH "LOCAL-MAP ENTRY"
This entry specifies localized mapping phase before NAMEPREP takes place.
Different mapping rules can be specified for each TLD (top-level domain).
For example, you can have one mapping for ``.tw'' domain, and another for
``.jp'' domain.
.PP
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWlocal-map \fItld\f(CW \fIscheme\fR [\fIscheme\fR..]
.fi
.RE
.PP
.I tld
specifies the TLD to which the mapping rule is to be applied, and
.I scheme
specifies the mapping scheme.  Available schemes are same as
\f(CWnameprep-map\fR entry.  See ``NAMEPREP-MAP ENTRY'' for details.
.PP
There are two special
.IR tld s
for specifying the mapping rule for local domain names (domain names
without any dots in them), and the default mapping rule.
If
.I tld
is ``-'', it matches domain names which do not contain any dots.
If
.I tld
is ``.'', it matches any domain names which don't match to any other
mapping rules specified by ``local-map'' entries.
.\"
.SH "DELIMITER-MAP ENTRY"
This entry specifies characters to be regarded as the domain name delimiter,
which is period (``.'').
.PP
The syntax of this entry is:
.PP
.RS 4
.nf
\f(CWdelimiter-map \fIcodepoint\fR [\fIcodepoint\fR..]
.fi
.RE
.PP
.I codepoint
specifies the Unicode codepoint value (in hexadecimal format) for the
character to be regarded as a delimiter.
.\"
.SH "MAPFILE FORMAT"
A mapfile defines a set of character mapping rules.  It can define
unconditional one-character to N-character-sequence (N can be 0, 1 or more)
mappings.
.PP
A mapfile is a simple text file, and each line specifies a single mapping.
Each line is of the form:
.PP
.RS 4
.nf
\fIsrc-codepoint\fR\f(CW; \fImapped-codepoint-seq\fR\f(CW;\fR
.fi
.RE
.PP
.I src-codepoint
indicates source character of the mapping, and must be a Unicode codepoint
value in hexadecimal string.
.I mapped-codepoint-seq
is a sequence of characters which is the outcome of the mapping, and must
be a (possibly empty) list of Unicode codepoint values in hexadecimal string,
separated by spaces.
.PP
Lines which begin with ``#'' are treated as comments and ignored.
.PP
A sample mapfile is shown below.
.PP
.RS 4
.nf
.ft CW
# map "A" to "a"
0041; 0061;
# map "#" to nothing
0023; ;
# map "@" to "at"
0040; 0061 0074;
.ft R
.fi
.RE
.\"
.SH "SETFILE FORMAT"
A setfile defines a set of characters, and is used for specifying
prohibited/unasssigned characters.  The set is specified by
enumerating either individual character codepoints or ranges of
character codepoints.
.PP
A setfile is also a simple text file, and each line specifies a single
character codepoint, or a range of codepoints as follows:
.PP
.RS 4
.nf
\fIcodepoint\fP
\fIcodepoint-start\fR\f(CW-\fR\fIcodepoint-end\fR
.fi
.RE
.PP
.IR codepoint ,
.I codepoint-start
and
.I codepoint-end
are Unicode codepoint values in hexadecimal format.
.PP
Lines which begin with ``#'' are treated as comments and ignored.
.PP
A sample setfile is shown below.
.PP
.RS 4
.nf
.ft CW
# Prohibit tilde
007E
# Prohibit control characters
0000-001F
007F-000F
# Prohibit all the Unicode characters beyond BMP
10000-10FFFF
.ft R
.fi
.RE
.\"
.SH "LOCAL CODESET"
.B mdn.conf
does not have an entry to specify the local codeset, since
it is determined from the application's current locale information.
So each application can use different local codeset.
.PP
Although mDNkit tries hard to find out the local codeset, sometimes it
fails.  For example, there are applications which use non-ASCII codeset
but work in C locale.  In this case, you can specify the application's
local codeset by an environment variable ``\fBMDN_LOCAL_CODESET\fR''.
Just set the codeset name (or its alias name) to the variable, and
mDNkit will use the codeset as the local one, regardless of the locale
setting.
.\"
.SH "SAMPLE CONFIGURATION"
The following shows a sample configuration file.
.PP
.RS 4
.ft CW
.nf
#
# a sample configuration.
#

# Use RACE as the IDN encoding.
idn-encoding RACE

# Use draft-ietf-idn-nameprep-06.txt as NAMEPREP.
nameprep nameprep-06

# Regard U+3002 (IDEOGRAPHIC FULL STOP) and U+FF0E
# (FULLWIDTH FULL STOP) as the domain component delimiter
# as well as ``.''.
delimiter-map U+3002 U+FF0E

# Perform Japanese-specific mapping for .jp domain.
# assuming /usr/local/lib/mdnkit/jp-map contains the mapping.
local-map .jp filemap:/usr/local/lib/mdnkit/jp-map
.fi
.ft R
.RE
.\"
.SH FILES
.I @sysconfdir@/mdn.conf
.br
.I @sysconfdir@/mdn.conf.sample
\- sample configuration with comments
.\"
.SH "SEE ALSO"
iconv(3), mdnsproxy(8)
